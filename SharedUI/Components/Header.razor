<header >
    <nav class="d-flex justify-content-around justify-content-md-between  navbar navbar-expand-md navbar-light container">
        <div class="navbar-container">
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    @foreach (var menuItem in MenuItems)
                    {
                        <li class="nav-item">

                            <a class="nav-link @(menuItem.IsActive ? "active" : "")" href="@menuItem.Link" @onclick="() => ItemClicked(menuItem)">@menuItem.Title <i class="@menuItem.Icon"></i></a>
                        </li>
                    }
                </ul>
            </div>
            
        </div>
        <a class="text-decoration-none user-avatar " href="#">
            <img src="_content/SharedUI/img/1.png" alt="User Avatar">
            <span>@UserName</span>
            <small>(@UserRole)</small>
        </a>
    </nav>
    
</header>
@code {
    [Parameter]
    public string UserName { get; set; } = "علی اکبر رضاپور";

    [Parameter]
    public string UserRole { get; set; } = "نماینده";

    [Parameter]
    public List<MenuItem> MenuItems { get; set; } = new List<MenuItem>
    {
        new MenuItem { Title = "خانه", Link = "/", Icon = "bi bi-house", IsActive = true },
        new MenuItem { Title = "مشتریان", Link = "#", Icon = "bi bi-people", IsActive = false },
        new MenuItem { Title = "نمایندگان", Link = "/agents/dashboard", Icon = "bi bi-person-badge", IsActive = false },
        new MenuItem { Title = "تامین‌کنندگان", Link = "#", Icon = "bi bi-truck", IsActive = false },
        new MenuItem { Title = "تماس با ما", Link = "#", Icon = "bi bi-telephone", IsActive = false }
    };
    private async Task ItemClicked(MenuItem item)
    {
        var options = new ParallelOptions() { MaxDegreeOfParallelism = 1 };
        Parallel.ForEach(MenuItems, options, x => { x.IsActive = false; });
        MenuItems.Where(x => x.Title == item.Title).FirstOrDefault()!.IsActive = true;
        await InvokeAsync(StateHasChanged);
    }
    public class MenuItem
    {
        public string Title { get; set; }
        public string Link { get; set; }
        public string Icon { get; set; }
        public bool IsActive { get; set; }
    }
}