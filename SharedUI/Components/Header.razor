<div class="container">
    <nav class="navbar navbar-expand-md">
        <div class="container-fluid">
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarToggler" aria-controls="navbarToggler" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarToggler">
                @* <a class="navbar-brand" href="#">Hidden brand</a> *@
                <ul class="navbar-nav ms-auto mb-md-0">
                    @foreach (var menuItem in MenuItems)
                    {
                        <li class="nav-item mx-md-5">

                            <a class="nav-link @(menuItem.IsActive ? "active" : "")" href="@menuItem.Link" @onclick="() => ItemClicked(menuItem)" aria-current="page">@menuItem.Title <i class="@menuItem.Icon"></i></a>
                        </li>
                    }
                    @* <li class="nav-item">
                        <a class="nav-link active" aria-current="page" href="#">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">Link</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link disabled" aria-disabled="true">Disabled</a>
                    </li> *@
                </ul>
                <!--<a class="text-decoration-none user-avatar me-auto" href="#">
                    <img src="_content/SharedUI/img/1.png" alt="User Avatar">
                    <span>@UserName</span>
                    @* <small>(@UserRole)</small> *@
                </a>-->
                
                @* <div class="flex items-center justify-end">
                    <a class="ml-3 relative p-2 cursor-pointer flex justify-center items-center shrink-0" href="/profile/notification/">
                        <div class="flex">
                            <div class="cube-font-icon" data-icon-name="cube-alert-notification-outline" data-icon="" style="width: 24px; height: 24px; font-size: 24px; font-weight: normal; color: var(--color-icon-high-emphasis);">
                            </div>
                        </div>
                    </a>
                    <a class="styles_Link__RMyqc" href="/users/login/?backUrl=/">
                        <button class="relative flex items-center user-select-none styles_btn__Q4MvL text-button-2 styles_btn--medium__4GoNC styles_btn--neutralOutlined__mLWvq styles_btn--black__xj6Mt rounded-medium whitespace-nowrap shrink-0 ml-2 lg:ml-0" data-cro-id="header-profile">
                            <div class="flex items-center justify-center relative grow">
                                <div class="flex ml-2">
                                    <svg style="width: 24px; height: 24px; fill: var(--color-icon-high-emphasis);">
                                        <use xlink:href="#registerationSignIn"></use>
                                    </svg>
                                </div>
                                ورود | ثبت‌نام
                            </div>
                        </button>
                    </a>
                    <span class="bg-neutral-200 mx-3 hidden lg:block styles_BaseLayoutHeaderUserSection__divider__5TsZs"></span>
                    <div class="relative flex flex-col">
                        <a class="relative inline-flex pr-2 pl-0 lg:p-2 bg-neutral-000 rounded py-2" data-cro-id="header-cart" href="/checkout/cart/">
                            <div class="flex">
                                <svg style="width: 24px; height: 24px; fill: var(--color-icon-high-emphasis);">
                                    <use xlink:href="#cartOff"></use>
                                </svg>
                            </div>
                        </a>
                        <div class="styles_MiniCartPopup__popup__7z9H_ bg-neutral-000 rounded shadow-3-bottom absolute z-1 styles_BaseLayoutMiniCart__container__NMEVO hidden">
                            <div class="flex items-center py-2 px-3"></div>
                            <div class="overflow-auto styles_MiniCartPopup__items__JUJlY">
                                <div class="py-6 lg:px-0 bg-neutral-000 rounded-large">
                                    <div class="flex justify-center">
                                        <div style="width: 200px; height: 150px; line-height: 0;">
                                            <span class="w-full inline-block" style="display: inline-block; object-fit: contain; width: 200px; height: 150px;"></span>
                                        </div>
                                    </div>
                                    <p class="text-h4 text-neutral-800 text-center mt-6">سبد خرید شما خالی است!</p>
                                </div>
                            </div>
                            <div class="flex items-center py-2 px-3 border-complete-t">
                                <a class="relative flex items-center user-select-none styles_btn__Q4MvL text-button-1 styles_btn--large__1Muai styles_btn--primary__y0GEv rounded-medium mr-auto" data-cro-id="header-submit-order" href="/checkout/cart/">
                                    <div class="flex items-center justify-center relative grow">ثبت سفارش</div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div> *@
                @* <form class="d-flex" role="search">
                    <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-outline-success" type="submit">Search</button>
                </form> *@
            </div>
            
        </div>
        
    </nav>
@*     <nav class="d-flex justify-content-md-between  navbar navbar-expand-md navbar-light">
        <div class="navbar-container">
            
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    @foreach (var menuItem in MenuItems)
                    {
                        <li class="nav-item mx-md-5">

                            <a class="nav-link @(menuItem.IsActive ? "active" : "")" href="@menuItem.Link" @onclick="() => ItemClicked(menuItem)">@menuItem.Title <i class="@menuItem.Icon"></i></a>
                        </li>
                    }
                </ul>
            </div>
            
        </div>
        <a class="text-decoration-none user-avatar " href="#">
            <img src="_content/SharedUI/img/1.png" alt="User Avatar">
            <span>@UserName</span>
            <small>(@UserRole)</small>
        </a>
    </na-v> *@
    
</div>
@code {
    
    
    [Parameter]
    public string UserName { get; set; } = "علی اکبر رضاپور";

    [Parameter]
    public string UserRole { get; set; } = "نماینده";

    [Parameter]
    public List<MenuItem> MenuItems { get; set; } = new List<MenuItem>
    {
        new MenuItem { Title = "خانه", Link = "/", Icon = "bi bi-house", IsActive = true },
        new MenuItem { Title = "آفِروز", Link = "#", Icon = "bi bi-people", IsActive = false },
        new MenuItem { Title = "نمایندگان", Link = "/agents/dashboard", Icon = "bi bi-person-badge", IsActive = false },
        new MenuItem { Title = "خرید قسطی", Link = "#", Icon = "bi bi-truck", IsActive = false },
        new MenuItem { Title = "فروشنده شو", Link = "#", Icon = "bi bi-telephone", IsActive = false }
    };
    private async Task ItemClicked(MenuItem item)
    {
        var options = new ParallelOptions() { MaxDegreeOfParallelism = 1 };
        Parallel.ForEach(MenuItems, options, x => { x.IsActive = false; });
        MenuItems.Where(x => x.Title == item.Title).FirstOrDefault()!.IsActive = true;
        await InvokeAsync(StateHasChanged);
    }
    public class MenuItem
    {
        public string Title { get; set; }
        public string Link { get; set; }
        public string Icon { get; set; }
        public bool IsActive { get; set; }
    }
}