@* <link href="css/loan-calculator.css" rel="stylesheet" /> *@
<div class="row mb-2">
    <div class="col text-center">
        <h3 class="mx-auto title-text">ماشین حساب وام</h3>
        <i class="fas fa-user-times fs-3 m-1"></i>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-2 my-2">
    <div class="col-12 col-md-6">
        <div class="row row-cols-1  box-shadow-primary g-md-1 p-3">
            <div class="col lc-slider-item">
                <label>نرخ سود (%): <span>@LocalInterestRate.ToString("N0") درصد</span></label>
                @* <input type="number" step="0.2" @bind-Value="@LocalInterestRate" @bind-Value:event="oninput" style="width: 100px;" /> *@
                <input type="range" min="1" max="100" step="1" @bind-Value="@LocalInterestRate" @bind-Value:event="oninput" @onchange="Calculate" />
                
            </div>
            <div class="col lc-slider-item">
                <label>مبلغ تسهیلات (تومان): <span>@LoanAmount.ToString("N0") تومان</span></label>
                <input type="range" min="@MinLoanAmount" max="@MaxLoanAmount" step="@LoanStep" @bind-Value="@LoanAmount" @bind-Value:event="oninput" @onchange="Calculate" />
                
            </div>
            <div class="col lc-slider-item">
                <label>تعداد بازپرداخت: <span>@PaymentMonths</span></label>
                <input type="range" min="@MinPaymentMonths" max="@MaxPaymentMonths" step="1" @bind-Value="@PaymentMonths" @bind-Value:event="oninput" @onchange="Calculate" />
                
            </div>
            <div class="col lc-slider-item">
                <label>تعداد روز تنفس: <span>@GraceDays روز</span></label>
                <input type="range" min="0" max="@MaxGraceDays" step="10" @bind-Value="@GraceDays" @bind-Value:event="oninput" @onchange="Calculate" />
                
            </div>
            <div class="col lc-slider-item">
                <label>فاصله بین دو بازپرداخت (ماه): <span>@PaymentInterval ماه</span></label>
                <input type="range" min="1" max="@MaxPaymentInterval" step="1" @bind-Value="@PaymentInterval" @bind-Value:event="oninput" @onchange="Calculate" />
                
            </div>
        </div>
    </div>
    <div class="col-12 col-md-6">
        <div class="row row-cols-1  box-shadow-primary g-md-1 p-3">
            <div class="col text-center my-4">
                <h3 class="mx-auto title-text">نتایج محاسبات</h3>
            </div>
            <div class="col lc-result-item my-2">
                <label>مبلغ هر بازپرداخت:</label>
                <strong>@(MonthlyPayment.ToString("N0")) تومان</strong>
            </div>
            <div class="col lc-result-item my-2 ">
                <label>مبلغ فرع تسهیلات:</label>
                <strong>@(InterestAmount.ToString("N0")) تومان</strong>
            </div>
            <div class="col lc-result-item my-2 ">
                <label>مبلغ اصل و فرع:</label>
                <strong>@(TotalAmount.ToString("N0")) تومان</strong>
            </div>
            <div class="col lc-result-item my-2">
                <label>فرع تنفس:</label>
                <strong>@(GraceInterestAmount.ToString("N0")) تومان</strong>
            </div>
            <div class="col lc-result-item my-2">
                <label>@DifferenceTitle:</label>
                <strong>@(FeeAmount.ToString("N0")) تومان</strong>
            </div>
            <div class="col text-center my-2">
                <button type="button" @onclick="ToggleTable" class="btn btn-link text-decoration-none primary-color">
                @* <a href="#" class="icon-link icon-link-hover" style="--bs-link-hover-color-rgb: var(--primary-r), var(--primary-g), var(--primary-b);--bs-icon-link-transform: translate3d(0, -0.25em, 0);"> *@
                    @(ShowTable ? "مخفی کردن جدول" : "مشاهده جدول بازپرداخت")
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" class="svg-icon-3 hover-transform-down" fill="currentColor">
                        <path d="M64 448l0-177.6c5.2 1 10.5 1.6 16 1.6l16 0 0 32 0 144c0 8.8-7.2 16-16 16s-16-7.2-16-16zM80 224c-17.7 0-32-14.3-32-32c0 0 0 0 0 0l0-24c0-66.3 53.7-120 120-120l48 0c52.5 0 97.1 33.7 113.4 80.7c-3.1-.5-6.2-.7-9.4-.7c-20 0-37.9 9.2-49.7 23.6c-9-4.9-19.4-7.6-30.3-7.6c-15.1 0-29 5.3-40 14c-11-8.8-24.9-14-40-14l-40 0c-13.3 0-24 10.7-24 24s10.7 24 24 24l40 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-40 0-40 0zM0 192s0 0 0 0c0 18 6 34.6 16 48l0 208c0 35.3 28.7 64 64 64s64-28.7 64-64l0-82c5.1 1.3 10.5 2 16 2c25.3 0 47.2-14.7 57.6-36c7 2.6 14.5 4 22.4 4c20 0 37.9-9.2 49.7-23.6c9 4.9 19.4 7.6 30.3 7.6c35.3 0 64-28.7 64-64l0-64 0-24C384 75.2 308.8 0 216 0L168 0C75.2 0 0 75.2 0 168l0 24zm336 64c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-48 0-16c0-8.8 7.2-16 16-16s16 7.2 16 16l0 64zM160 272c5.5 0 10.9-.7 16-2l0 2 0 32c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-32 16 0zm64-24l0-40c0-8.8 7.2-16 16-16s16 7.2 16 16l0 48 0 16c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-24z" />
                    </svg>
                @* </a> *@
                </button>
                @* <button class="primary-btn bg-primary text-white p-2 mx-auto" @onclick="ToggleTable">@(ShowTable ? "مخفی کردن جدول" : "مشاهده جدول بازپرداخت")</button> *@
            </div>
        </div>
    </div>
</div>

<div class="row mt-5">
    @if (ShowTable)
    {
        @* <div class="position-relative pt-3">
            <div class="position-absolute start-0 top-100">
                
                
            </div>
        </div> *@
        <div class="d-flex justify-content-end">
            <button class="primary-btn mx-1" @onclick="ExportToExcel" title="دانلود فایل اکسل جدول">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" class="svg-icon-3 primary-color" fill="currentColor">
                    <path d="M64 0C28.7 0 0 28.7 0 64L0 448c0 35.3 28.7 64 64 64l256 0c35.3 0 64-28.7 64-64l0-288-128 0c-17.7 0-32-14.3-32-32L224 0 64 0zM256 0l0 128 128 0L256 0zM155.7 250.2L192 302.1l36.3-51.9c7.6-10.9 22.6-13.5 33.4-5.9s13.5 22.6 5.9 33.4L221.3 344l46.4 66.2c7.6 10.9 5 25.8-5.9 33.4s-25.8 5-33.4-5.9L192 385.8l-36.3 51.9c-7.6 10.9-22.6 13.5-33.4 5.9s-13.5-22.6-5.9-33.4L162.7 344l-46.4-66.2c-7.6-10.9-5-25.8 5.9-33.4s25.8-5 33.4 5.9z" />
                </svg>
            </button>
            <button class="primary-btn mx-1" @onclick="ExportToPDF" title="دانلود فایل pdf جدول">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="svg-icon-3 primary-color" fill="currentColor">
                    <path d="M0 64C0 28.7 28.7 0 64 0L224 0l0 128c0 17.7 14.3 32 32 32l128 0 0 144-208 0c-35.3 0-64 28.7-64 64l0 144-48 0c-35.3 0-64-28.7-64-64L0 64zm384 64l-128 0L256 0 384 128zM176 352l32 0c30.9 0 56 25.1 56 56s-25.1 56-56 56l-16 0 0 32c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-48 0-80c0-8.8 7.2-16 16-16zm32 80c13.3 0 24-10.7 24-24s-10.7-24-24-24l-16 0 0 48 16 0zm96-80l32 0c26.5 0 48 21.5 48 48l0 64c0 26.5-21.5 48-48 48l-32 0c-8.8 0-16-7.2-16-16l0-128c0-8.8 7.2-16 16-16zm32 128c8.8 0 16-7.2 16-16l0-64c0-8.8-7.2-16-16-16l-16 0 0 96 16 0zm80-112c0-8.8 7.2-16 16-16l48 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-32 0 0 32 32 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-32 0 0 48c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-64 0-64z" />
                </svg>
            </button>
        </div>
        <div class="lc-table-container" style="height: @(TableHeight)px; overflow: hidden; transition: height 0.5s ease;">
            <table class="lc-payment-table">
                <thead>
                    <tr>
                        <th>شماره بازپرداخت</th>
                        <th>مبلغ بازپرداخت</th>
                        <th>سهم اصل</th>
                        <th>سهم فرع</th>
                        <th>مانده تسهیلات</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var payment in PaginatedPaymentSchedule)
                    {
                        <tr>
                            <td>@payment.InstallmentNumber</td>
                            <td>@payment.PaymentAmount.ToString("N0") تومان</td>
                            <td>@payment.PrincipalShare.ToString("N0") تومان</td>
                            <td>@payment.InterestShare.ToString("N0") تومان</td>
                            <td>@payment.RemainingBalance.ToString("N0") تومان</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="lc-pagination">
                <button class="lc-pagination-btn" disabled="@(CurrentPage == 1)" @onclick="PreviousPage">قبلی</button>
                <span>صفحه @CurrentPage از @TotalPages</span>
                <button class="lc-pagination-btn" disabled="@(CurrentPage == TotalPages)" @onclick="NextPage">بعدی</button>
            </div>
        </div>
    }
</div>








@*<div class="lc-calculator5">

    <h3 class="d-flex mx-auto mb-5 title-text">ماشین حساب وام</h3>

    <!-- باکس نرخ سود قابل تغییر -->
    <div class="lc-info-box mt-3">
        <label>نرخ سود (%):</label>
        <input type="number" step="0.2" @bind-Value="@LocalInterestRate" @bind-Value:event="oninput" style="width: 100px;" />
    </div>

    <!-- اسلایدرها -->
    <div class="lc-sliders">
        <div class="lc-slider-row">
            <div class="lc-slider-item">
                <label>مبلغ تسهیلات (تومان):</label>
                <input type="range" min="@MinLoanAmount" max="@MaxLoanAmount" step="@LoanStep" @bind-Value="@LoanAmount" @bind-Value:event="oninput" @onchange="Calculate" />
                <span>@LoanAmount.ToString("N0") تومان</span>
            </div>
            <div class="lc-slider-item">
                <label>تعداد بازپرداخت:</label>
                <input type="range" min="@MinPaymentMonths" max="@MaxPaymentMonths" step="1" @bind-Value="@PaymentMonths" @bind-Value:event="oninput" @onchange="Calculate" />
                <span>@PaymentMonths ماه</span>
            </div>
        </div>
        <div class="lc-slider-row">
            <div class="lc-slider-item">
                <label>تعداد روز تنفس:</label>
                <input type="range" min="0" max="@MaxGraceDays" step="10" @bind-Value="@GraceDays" @bind-Value:event="oninput" @onchange="Calculate" />
                <span>@GraceDays روز</span>
            </div>
            <div class="lc-slider-item">
                <label>فاصله بین دو بازپرداخت (ماه):</label>
                <input type="range" min="1" max="@MaxPaymentInterval" step="1" @bind-Value="@PaymentInterval" @bind-Value:event="oninput" @onchange="Calculate" />
                <span>@PaymentInterval ماه</span>
            </div>
        </div>
    </div>

    <!-- نتایج محاسبات -->
    <div class="container-wfull container-shadow-secondary-50 container-p-1 my-3">
        <div class="row mt-1">
            
        </div>
        <div class="row my-2">
            <div class="col-12 col-md-6 text-center">
                <label>مبلغ هر بازپرداخت:</label>
                <strong>@(MonthlyPayment.ToString("N0")) تومان</strong>
            </div>
            <div class="col-12 col-md-6 text-center">
                <label>مبلغ فرع تسهیلات:</label>
                <strong>@(InterestAmount.ToString("N0")) تومان</strong>
            </div>
        </div>
        <div class="row my-2">
            <div class="col-12 col-md-6 text-center">
                <label>مبلغ اصل و فرع:</label>
                <strong>@(TotalAmount.ToString("N0")) تومان</strong>
            </div>
            <div class="col-12 col-md-6 text-center">
                <label>فرع تنفس:</label>
                <strong>@(GraceInterestAmount.ToString("N0")) تومان</strong>
            </div>
        </div>
        <div class="row my-2">
            <div class="col-12 text-center">
                <label>@DifferenceTitle:</label>
                <strong>@(FeeAmount.ToString("N0")) تومان</strong>
            </div>
        </div>

    </div>
</div> *@
    @* <div class="lc-results ">
        <h4 class=" fw-bold">نتایج محاسبات</h4>
        <div class="lc-result-row">
            <div class="lc-result-item">
                <label>مبلغ هر بازپرداخت:</label>
                <span>@(MonthlyPayment.ToString("N0")) تومان</span>
            </div>
            <div class="lc-result-item">
                <label>مبلغ فرع تسهیلات:</label>
                <span>@(InterestAmount.ToString("N0")) تومان</span>
            </div>
        </div>
        <div class="lc-result-row">
            <div class="lc-result-item">
                <label>فرع تنفس:</label>
                <span>@(GraceInterestAmount.ToString("N0")) تومان</span>
            </div>
            <div class="lc-result-item">
                <label>مبلغ اصل و فرع:</label>
                <span>@(TotalAmount.ToString("N0")) تومان</span>
            </div>
        </div>
        <div class="lc-result-item">
            <label>@DifferenceTitle:</label>
            <span>@(FeeAmount.ToString("N0")) تومان</span>
        </div>
    </div> *@

    

@code {
    // پارامترهای ورودی
    [Parameter] public double InterestRate { get; set; } = 0;
    [Parameter] public double RealInterestRate { get; set; } = 0;
    [Parameter] public string DifferenceTitle { get; set; } = "کارمزد خدمات فین تک";
    [Parameter] public long MinLoanAmount { get; set; } = 50000000;
    [Parameter] public long MaxLoanAmount { get; set; } = 1000000000;
    [Parameter] public long LoanStep { get; set; } = 10000000;
    [Parameter] public int MinPaymentMonths { get; set; } = 1;
    [Parameter] public int MaxPaymentMonths { get; set; } = 240;
    [Parameter] public int MaxGraceDays { get; set; } = 30;
    [Parameter] public int MaxPaymentInterval { get; set; } = 3;

    // مقادیر اسلایدرها و نرخ سود
    private long LoanAmount { get; set; } = 50000000;
    private int PaymentMonths { get; set; } = 12;
    private int GraceDays { get; set; } = 0;
    private int PaymentInterval { get; set; } = 1;
    private double _localInterestRate;
    private double LocalInterestRate
    {
        get => _localInterestRate;
        set
        {
            if (_localInterestRate != value)
            {
                _localInterestRate = value;
#pragma warning disable CS4014
                Calculate(); // فراخوانی Calculate هنگام تغییر نرخ سود
#pragma warning restore CS4014
            }
        }
    }

    // نتایج محاسبات
    private double MonthlyPayment { get; set; } = 0;
    private double InterestAmount { get; set; } = 0;
    private double GraceInterestAmount { get; set; } = 0;
    private double TotalAmount { get; set; } = 0;
    private double FeeAmount { get; set; } = 0;
    private List<PaymentDetail> PaymentSchedule { get; set; } = new();
    private bool ShowTable { get; set; } = false;
    private int TableHeight { get; set; } = 0;

    // متغیرهای صفحه‌بندی
    private const int RecordsPerPage = 5;
    private int CurrentPage { get; set; } = 1;
    private int TotalPages => (int)Math.Ceiling((double)PaymentSchedule.Count / RecordsPerPage);
    private IEnumerable<PaymentDetail> PaginatedPaymentSchedule => PaymentSchedule
        .Skip((CurrentPage - 1) * RecordsPerPage)
        .Take(RecordsPerPage);

    private class PaymentDetail
    {
        public int InstallmentNumber { get; set; }
        public double PaymentAmount { get; set; }
        public double PrincipalShare { get; set; }
        public double InterestShare { get; set; }
        public double RemainingBalance { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        LocalInterestRate = InterestRate != 0 ? InterestRate : 20; // مقدار پیش‌فرض از پارامتر
        //RealInterestRate = Math.Max(RealInterestRate, LocalInterestRate); // اطمینان از بزرگ‌تر یا برابر بودن
        await Calculate();
    }

    private async Task Calculate()
    {
        // به‌روزرسانی RealInterestRate با حداقل LocalInterestRate
        //RealInterestRate = Math.Max(RealInterestRate, LocalInterestRate);

        // محاسبه تعداد بازپرداخت تنفس
        //int graceMonths = (int)Math.Ceiling((double)GraceDays / 30);
        double rate = LocalInterestRate / 100 / (12 / PaymentInterval);
        double realRate = RealInterestRate / 100 / (12 / PaymentInterval);
        //int totalPayments = (int)Math.Ceiling((double)PaymentMonths / PaymentInterval); // تعداد کل اقساط
        int totalPayments = PaymentMonths;
        //int totalGracePayments = graceMonths > 0 ? graceMonths : 0;

        // محاسبه PMT برای دوره عادی
        double pmt = PMT(rate, totalPayments, -LoanAmount);
        double realPmt = PMT(realRate, totalPayments, -LoanAmount);

        // محاسبه فرع تنفس
        //double gracePmt = totalGracePayments > 0 ? PMT(rate, totalGracePayments, -LoanAmount) : 0;
        //GraceInterestAmount = gracePmt * totalGracePayments;
        GraceInterestAmount = (LoanAmount * LocalInterestRate * GraceDays) / 36500;

        //MonthlyPayment = pmt + (gracePmt * totalGracePayments / totalPayments);
        MonthlyPayment = pmt + (GraceInterestAmount / totalPayments);
        InterestAmount = (pmt * totalPayments - LoanAmount);
        TotalAmount = LoanAmount + InterestAmount + GraceInterestAmount;
        //FeeAmount = Math.Abs(pmt - realPmt) * totalPayments; // فرمول اصلاح‌شده
        FeeAmount = Math.Abs(PV(Math.Abs(realRate - rate), totalPayments, Math.Abs(realPmt - pmt)*-1));
        //double pv = PV(rate, totalPayments, pmt);
        //double realPV = PV(realRate, totalPayments, realPmt);
        //FeeAmount = Math.Abs(realPV - pv);

        // تولید جدول بازپرداخت
        PaymentSchedule.Clear();
        double remaining = LoanAmount;
        double graceinterestremaining = GraceInterestAmount;
        for (int i = 1; i <= totalPayments; i++)
        {
            double interest = 0;
            double principal = 0;
            if (graceinterestremaining >= MonthlyPayment)
            {
                interest = MonthlyPayment;
                principal = 0;
                graceinterestremaining -= MonthlyPayment;
            }
            else if (graceinterestremaining > 0)
            {
                //interest = (remaining * rate) + graceinterestremaining;
                if (((remaining * rate) + graceinterestremaining) >= MonthlyPayment)
                {
                    interest = MonthlyPayment;
                    principal = 0;
                    graceinterestremaining = 0;
                }
                else
                {
                    interest = (remaining * rate) + graceinterestremaining;
                    principal = MonthlyPayment - interest;
                    if (remaining - principal < 0) principal = remaining;
                    remaining -= principal;
                }
            }
            else
            {
                interest = remaining * rate;
                principal = MonthlyPayment - interest;
                if (remaining - principal < 0) principal = remaining;
                remaining -= principal;
            }


            PaymentSchedule.Add(new PaymentDetail
            {
                InstallmentNumber = i,
                PaymentAmount = (i == totalPayments ? principal + interest:  MonthlyPayment),
                PrincipalShare = principal,
                InterestShare = interest,
                RemainingBalance = remaining
            });
        }

        // بازنشانی صفحه‌بندی
        ShowTable = false;
        CurrentPage = 1;
        StateHasChanged();
    }

    private double PMT(double rate, int nper, double pv)
    {
        if (rate == 0) return -pv / nper;
        return -pv * rate / (1 - Math.Pow(1 + rate, -nper));
    }
    private double PV(double rate, int nper, double pmt)
    {
        if (rate == 0) return -(pmt * nper);
        return -(pmt * (1 - Math.Pow(1 + rate, -nper)) / rate);
    }
    private async Task ToggleTable()
    {
        ShowTable = !ShowTable;
        TableHeight = ShowTable ? 400 : 0; // ارتفاع دلخواه برای نمایش جدول
        CurrentPage = 1; // بازنشانی صفحه هنگام باز/بستن جدول
        await Task.CompletedTask;
    }

    private async Task PreviousPage()
    {
        if (CurrentPage > 1)
        {
            CurrentPage--;
            StateHasChanged();
        }
        await Task.CompletedTask;
    }

    private async Task NextPage()
    {
        if (CurrentPage < TotalPages)
        {
            CurrentPage++;
            StateHasChanged();
        }
        await Task.CompletedTask;
    }

    private async Task ExportToExcel()
    {
        // لاجیک ساده برای صدور به اکسل
        System.Console.WriteLine("Exporting to Excel...");
        await Task.CompletedTask;
    }

    private async Task ExportToPDF()
    {
        // لاجیک ساده برای صدور به PDF
        System.Console.WriteLine("Exporting to PDF...");
        await Task.CompletedTask;
    }
}